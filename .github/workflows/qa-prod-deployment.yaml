name: Deploy to AWS EKS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (qa or prod)"
        required: true
        default: "qa"
      tag:
        description: "Image tag to deploy"
        required: true

jobs:
  deploy:
    name: Deploy tracking-service to AWS EKS
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create manifest directory if not exists
        run: mkdir -p manifest

      - name: Generate ConfigMap YAML
        env:
          ENV_CONTENT: ${{ github.event.inputs.environment == 'prod' && secrets.ENV_FILE_CONTENT_PROD || secrets.ENV_FILE_CONTENT_QA }}
        run: |
          echo "$ENV_CONTENT" > manifest/configmap.yaml
          ls -ltra manifest

      - name: Set environment-specific variables
        run: |
          if [ "${{ github.event.inputs.environment }}" == "qa" ]; then
            echo "EKS_CLUSTER_NAME=${{ secrets.EKS_CLUSTER_NAME_QA }}" >> $GITHUB_ENV
            echo "NAMESPACE=microservices-qa" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY_QA }}" >> $GITHUB_ENV
          else
            echo "EKS_CLUSTER_NAME=${{ secrets.EKS_CLUSTER_NAME_PROD }}" >> $GITHUB_ENV
            echo "NAMESPACE=default" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY_PROD }}" >> $GITHUB_ENV
          fi
          echo "IMAGE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          echo "FULL_IMAGE=$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
          echo "Using image $FULL_IMAGE in namespace $NAMESPACE"

      - name: Update Deployment Manifest
        run: |
          envsubst < manifest/tracking-service.yaml > manifest/tracking-service-updated.yaml
          ls -ltra manifest/

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS EKS
        run: |
          kubectl apply -f manifest/tracking-service-updated.yaml -n $NAMESPACE
          kubectl apply -f manifest/configmap.yaml -n $NAMESPACE
          sleep 10
          kubectl get pods -n $NAMESPACE | grep tracking
